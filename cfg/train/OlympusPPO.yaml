params: # Docs: https://github.com/Denys88/rl_games#config-parameters
  seed: ${...seed}

  algo:
    name: a2c_continuous

  model:
    name: continuous_a2c_logstd

  network:
    name: actor_critic
    separate: False

    space:
      continuous:
        mu_activation: None
        sigma_activation: None
        mu_init: # For the weights between last hidden layer and mu
          name: default
        sigma_init:
          name: const_initializer
          val: 0 # 0 equals to std = 1.
        fixed_sigma: True

    mlp:
      units: [128, 64, 64]
      activation: elu

      d2rl: False

      initializer: # For the hidden layers
        name: default # kaiming_normal or default
      regularizer:
        name: None

    # rnn:
    #   units: 64
    #   name: lstm
    #   layers: 1

  load_checkpoint: ${if:${...checkpoint},True,False} # flag which sets whether to load the checkpoint
  load_path: ${...checkpoint} # path to the checkpoint to load

  config:
    name: ${resolve_default:Olympus,${....experiment}}
    full_experiment_name: ${.name}
    device: ${....rl_device}
    device_name: ${....rl_device}
    env_name: rlgpu
    multi_gpu: ${....multi_gpu}
    ppo: True
    mixed_precision: True
    normalize_input: True
    normalize_value: True
    value_bootstrap: True
    num_actors: ${....task.env.numEnvs}
    reward_shaper:
      scale_value: 1.0
    normalize_advantage: True
    gamma: 0.99 #0.9995
    tau: 0.95 # Lambda for GAE
    e_clip: 0.2
    entropy_coef: 0.0 #0.001
    learning_rate: 3.e-4 # overwritten by adaptive lr_schedule
    lr_schedule: adaptive
    kl_threshold: 0.008 # target kl for adaptive lr
    truncate_grads: True
    grad_norm: 10.
    horizon_length: 50 #24 # Horizon length per each actor. Total number of steps will be num_actors*horizon_length * num_agents (if env is not MA num_agents==1).
    minibatch_size: 40960 # 384, 1024, 10240, 12288, 49152
    mini_epochs: 5

    critic_coef: 2
    clip_value: False 
    clip_actions: True
    seq_length: 4 # only for rnn
    bound_loss_type: bound # regularisation or bound
    bounds_loss_coef: 0.01
    max_epochs: ${resolve_default:2000,${....max_iterations}}

    save_best_after: 10
    score_to_win: 20000
    save_frequency: 50
    print_stats: True
